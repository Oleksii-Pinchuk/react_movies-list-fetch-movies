{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","onAddMovie","useState","title","setTitle","foundedMovie","setFoundedMovie","hasError","setHasError","isLoading","setIsLoading","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","endpoint","fetch","then","response","ok","Error","status","statusText","json","catch","App","setMovies","some","film","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f4ca29e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [title, setTitle] = useState('');\n  const [foundedMovie, setFoundedMovie] = useState<Movie | null>(null);\n\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasError(false);\n  };\n\n  const onHandleFindButton = () => {\n    setIsLoading(true);\n    setHasError(false);\n    getMovie(title)\n      .then((movie) => {\n        setIsLoading(false);\n        if (!movie) {\n          setHasError(true);\n          setFoundedMovie(null);\n        } else {\n          setFoundedMovie(movie);\n        }\n      })\n      .catch(() => setHasError(true));\n  };\n\n  const onHandleAddMovieToList = () => {\n    if (foundedMovie) {\n      onAddMovie(foundedMovie);\n      setTitle('');\n      setFoundedMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label\n            className=\"label\"\n            htmlFor=\"movie-title\"\n          >\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames(\n                  'input',\n                  { 'is-danger': hasError },\n                )}\n                value={title}\n                onChange={onTitleChange}\n              />\n            </div>\n          </label>\n          {hasError && (\n            <p className=\" help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={onHandleFindButton}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={onHandleAddMovieToList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {isLoading && (\n          <div>\n            Loading...\n          </div>\n        )}\n\n        {foundedMovie && (\n          <MovieCard movie={foundedMovie} />\n        )}\n      </div>\n    </>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=65e33bea&t=';\n\nexport const getMovie = (endpoint: string) => {\n  return fetch(`${API_URL}${endpoint}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n    .then(response => {\n      if (response.Error) {\n        return null;\n      }\n\n      return response;\n    });\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    if (!movies.some(film => film.imdbID === movie.imdbID)) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}